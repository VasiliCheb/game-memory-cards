class Card extends Phaser.GameObjects.Sprite { // создаём класс унаследованный от Phaser.GameObjects.Srite
    constructor(scene, value) { // конструктор с параметрами класса Card передает createCards
        super(scene, 0, 0, 'card'); // передаёт параметры позиций карт для вывода изображений согласно названию и значению
        this.scene = scene; // переменная ссылается на сцену
        this.value = value // передает значение полей карт в объект
        // this.setOrigin(0, 0); // перемещает контрпойнт центра картинки в верхний левый угол
        this.scene.add.existing(this); // выводит спрайт изображений на экран (выводит сцену в созданном ранее объекте)
        this.setInteractive(); // базовая функция делает элементы интерактивными
        this.opened = false; // устанавливает флаг значение при закрытой карте
        //this.on('pointerdown', this.open, this); // метод отслеживает нажатие на элемент (карту)

        //this.flip(); // вызывает в объекте метод анимации переворота карт
    }

    flip(texture) { // создаёт метод анимации переворота карт
        this.scene.tweens.add({ // получаем доступ к объекту фейзер твин с конфигуратором (add)
            targets: this, // переаем в свойство объект GameObjects.Sprite для использования анимации
            scaleX: 0, // степень сжатия объета по горизонтали (сжать карту)
            ease: 'Linear', // вид анимации
            duration: 150, // время анимации мил./сек.
            onComplete: () => { // функция в параметре создает анимацию разворачивания карты после её сжатия
                this.show(texture); // вызывает метод анимации разворачивания и показа карты
            }
        });
    }

    show(texture) { // создаёт метод анимации разворачивания и показа карты
        this.setTexture(texture); // передает значение карты какую необходимо открыть
        this.scene.tweens.add({ // получаем доступ к объекту фейзер твин с конфигуратором (add)
            targets: this, // переаем в свойство объект GameObjects.Sprite для использования анимации
            scaleX: 1, // степень сжатия объета по горизонтали (развернуть карту)
            ease: 'Linear', // вид анимации
            duration: 150, // время анимации мил./сек.
        });
    }

    open() { // отдельный метод класса карт, открывает карту
        this.opened = true; // устанавливает флаг значение при открытой карте
        this.flip('card' + this.value); // вызывает в объекте метод анимации переворота карт (передает параметр лицевой стороны карт)
        // this.setTexture('card' + this.value); // передает значение карты какую необходимо открыть после клика
    }

    close() { // отдельный метод класса карт, закрывает карту
        this.opened = false; // устанавливает флаг значение при закрытой карте
        this.flip('card'); // вызывает в объекте метод анимации переворота карт (передает параметр рубашки карты)
        // this.setTexture('card'); // передает значение рубашки карты для закрытия
    }
}
